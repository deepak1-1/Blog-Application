const mongoose = require('mongoose');
const Schema = mongoose.Schema;
const bcrypt = require('bcrypt');
const { isEmail } = require('validator');

const loginSchema = new Schema({

    username: {
        type: String,
        required: [true, 'Please fill username!'],
        unique: true
    },
    email: {
        type: String,
        required: [true, 'Please Enter an email!'],
        unique: true,
        lowercase: true,
        validate: [ isEmail, 'Please Enter a valid Email!']
    },
    password: {
        type: String,
        required: [true, 'Please Enter an password!'],
        minlength: [6, 'Password is short']
    }
}, {timestamps : true});

// middleware
loginSchema.pre('save', async function(next){
    try{
        const salt = await bcrypt.genSalt(10);
        const hashPassword = await bcrypt.hash(this.password, salt);
        this.password = hashPassword;
        next( )
    } catch(error){
        next(error)
    }
})


const loginModel = mongoose.model('LoginData', loginSchema);
module.exports = loginModel;